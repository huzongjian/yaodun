package com.springmvc.web.controller;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.rpc.ServiceException;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.commons.io.FileUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.springmvc.base.util.DateUtils;
import com.springmvc.base.util.EntityToJson;
import com.springmvc.base.util.StringUtils;
import com.springmvc.relationdrug.domain.Knowledge;
import com.springmvc.relationdrug.service.KnowledgeService;

@Controller
@RequestMapping("Knowledge")
public class KnowledgeController {
	@Resource
	KnowledgeService knowledgeService;
	
	@RequestMapping(value = "/load")
	private String init(HttpServletRequest request,
			HttpServletResponse response){
		return "knowledge/home";
		
	}

	@RequestMapping(value = "editKnowledge")
	@ResponseBody
	private void EditKnowledge(HttpServletRequest request,
			HttpServletResponse response) throws IOException, ServiceException {
		PrintWriter out = null;
		response.setContentType("applicaiton/json;charset=UTF-8");
		out = response.getWriter();
		List<Knowledge> list = this.knowledgeService.findAll();
		JSONArray array = new JSONArray();
		for (Knowledge basic : list) {
			JSONObject obj = new JSONObject();
			EntityToJson.entityToJSON(basic, obj);
			int x = 0;
			if (!StringUtils.isNullOrBlank(basic.getType())) {
				x = Integer.parseInt(basic.getType());
			}
			String imgpath =basic.getImg();
			int one = imgpath.lastIndexOf("/");
			String imgName =imgpath.substring((one+1),imgpath.length());
			
			obj.put("img",imgName);
			switch (x) {
			case 2:
				obj.put("typeName", "儿童");
				break;
			case 1:
				obj.put("typeName", "妇女");
				break;
			case 3:
				obj.put("typeName", "老人");
				break;
			case 4:
				obj.put("typeName", "抗生素");
				break;

			default:
				obj.put("typeName", "综合");
				break;
			}
			array.add(obj);
		}
		out.print(array);
	}

	@RequestMapping(value = "saveKnowledge")
	@ResponseBody
	private void SaveKnowledge(HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		String x = request.getParameter("b");
		JSONObject base = JSONObject.fromObject(x);
		System.err.println(base.toString() + "");
		String id = base.getString("id");
		String type = base.getString("type");
		String title = base.getString("title");
		String description = base.getString("desciption");
		String imgName =base.getString("img");
		Knowledge k = new Knowledge();
		InetAddress myIPaddress=InetAddress.getLocalHost();
		String mi = myIPaddress.getHostAddress();
		if(StringUtils.isNullOrBlank(imgName)){
			imgName ="1.png";
		}
		String img ="http://"+mi+":"+request.getServerPort()+"/yaodun/resources/img/app/"+imgName;
		JSONObject outobj = new JSONObject();
		if (!StringUtils.isNullOrBlank(id)) {
			k=knowledgeService.get(Long.parseLong(id));
			outobj.put("code", "1001");
			outobj.put("msg", "修改成功");
		}else{
			outobj.put("code", "1002");
			outobj.put("msg", "新增成功");
		}
		k.setTitle(title);
		k.setType(type);
		k.setDescription(description);
		k.setImg(img);
		k.setCreatetime(DateUtils.now());
		knowledgeService.saveOrUpdate(k);
		PrintWriter out = null;
		response.setContentType("applicaiton/json;charset=UTF-8");
		out = response.getWriter();	
		outobj.put("data", "");
		out.print(outobj);
	}
	
	@RequestMapping(value="/upload") 
    public void Upload( MultipartFile myfile, HttpServletRequest request,HttpServletResponse response) throws IOException{  
        //如果只是上传一个文件，则只需要MultipartFile类型接收文件即可，而且无需显式指定@RequestParam注解  
        //如果想上传多个文件，那么这里就要用MultipartFile[]类型来接收文件，并且还要指定@RequestParam注解  
        //并且上传多个文件时，前台表单中的所有<input type="file"/>的name都应该是myfile，否则参数里的myfile无法获取到所有上传的文件  
       
            if(myfile.isEmpty()){  
                System.out.println("文件未上传");  
            }else{  
                System.out.println("文件长度: " + myfile.getSize());  
                System.out.println("文件类型: " + myfile.getContentType());  
                System.out.println("文件名称: " + myfile.getName());  
                System.out.println("文件原名: " + myfile.getOriginalFilename());  
                System.out.println("========================================");  
                //如果用的是Tomcat服务器，则文件会上传到\\%TOMCAT_HOME%\\webapps\\YourWebProject\\WEB-INF\\upload\\文件夹中  
                String realPath = request.getSession().getServletContext().getRealPath("/resources/img/app");  
                //这里不必处理IO流关闭的问题，因为FileUtils.copyInputStreamToFile()方法内部会自动把用到的IO流关掉，我是看它的源码才知道的  
                FileUtils.copyInputStreamToFile(myfile.getInputStream(), new File(realPath, myfile.getOriginalFilename()));  
                System.err.println(myfile+"xx:"+realPath);
            }  
      
		String id = request.getParameter("id");
		String type = request.getParameter("type");
		String title = request.getParameter("title");
		String description = request.getParameter("desciption");
		String imgName =myfile.getOriginalFilename();
		Knowledge k = new Knowledge();
		InetAddress myIPaddress=InetAddress.getLocalHost();
		String mi = myIPaddress.getHostAddress();
		if(StringUtils.isNullOrBlank(imgName)){
			imgName ="1.png";
		}
		String img ="http://"+mi+":"+request.getServerPort()+"/yaodun/resources/img/app/"+imgName;
		JSONObject outobj = new JSONObject();
		if (!StringUtils.isNullOrBlank(id)) {
			k=knowledgeService.get(Long.parseLong(id));
			outobj.put("code", "1001");
			outobj.put("msg", "修改成功");
		}else{
			outobj.put("code", "1002");
			outobj.put("msg", "新增成功");
		}
		k.setTitle(title);
		k.setType(type);
		k.setDescription(description);
		k.setImg(img);
		k.setCreatetime(DateUtils.now());
		knowledgeService.saveOrUpdate(k);
		PrintWriter out = null;
		response.setContentType("applicaiton/json;charset=UTF-8");
		out = response.getWriter();	
		outobj.put("data", "");
		out.print(outobj);
       
    }  
  
	@RequestMapping(value = "delete")
	@ResponseBody
	private void DeleteKnowledge(HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		String id = request.getParameter("id");
		Knowledge k =new Knowledge(Long.parseLong(id));
		knowledgeService.delete(k);
		PrintWriter out = null;
		response.setContentType("applicaiton/json;charset=UTF-8");
		out = response.getWriter();	
		JSONObject outobj = new JSONObject();
		outobj.put("msg", "删除成功");
		out.print(outobj);
		}
	
	@RequestMapping(value = "updateImg")
	@ResponseBody
	private void UpdateImg(HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		List<Knowledge> l=knowledgeService.findAll();
		for(Knowledge m: l){
			String imgpath =m.getImg();
			int one = imgpath.lastIndexOf("/");
			String imgName =imgpath.substring((one+1),imgpath.length());
			InetAddress myIPaddress=InetAddress.getLocalHost();
			String mi = myIPaddress.getHostAddress();
			if(StringUtils.isNullOrBlank(imgName)){
				imgName ="1.png";
			}
			String img ="http://"+mi+":"+request.getServerPort()+"/yaodun/resources/img/app/"+imgName;
		    m.setImg(img);
		    knowledgeService.update(m);
		}
		PrintWriter out = null;
		response.setContentType("applicaiton/json;charset=UTF-8");
		out = response.getWriter();	
		JSONObject outobj = new JSONObject();
		outobj.put("msg", "更新成功");
		out.print(outobj);
		}
	
	

}
